{"questions":[{"question":"TypeScript was made public by __________.","answer":"Microsoft"},{"question":"Typescript compiler tsc converts code to _________.","answer":"JavaScript"},{"question":"We can rename a .js file to .ts file generally.","answer":"True"},{"question":"The value of TypeScript is writing _________.","answer":"Safer code"},{"question":"TypeScript is a __________.","answer":"Super-set of JavaScript"},{"question":"TypeScript is __________.","answer":"Object Oriented"},{"question":"A JavaScript file cannot be renamed to a TypeScript file.","answer":"False"},{"question":"Type Annotations allow us to _______.","answer":"Record the intended contract of the function or variable"},{"question":"Generics allows accepting arguments of _________.","answer":"Different types"},{"question":"During run time, _______ checking is done.","answer":"Dynamic Type"},{"question":"Which type is assigned to variables with null type?","answer":"None of the options"},{"question":"Static type checking is done at ________.","answer":"Compilation time"},{"question":"Annotations can be implemented as __________.","answer":"length: number"},{"question":"A type system is a set of ________.","answer":"Rules"},{"question":"Generics allows accepting arguments of _________.","answer":"Different types"},{"question":"Which of the following is the right way of defining enum?","answer":"All the options"},{"question":"any is a generic type.","answer":"False"},{"question":"Generics is a/an _______.","answer":"Template"},{"question":"Which of the options is used appropriately in JavaScript code?","answer":"function reverse(s: string) : string;"},{"question":"Syntax for a decorator is _________.","answer":"@symbol"},{"question":"Inheritance is implemented by using the ________ keyword.","answer":"extends"},{"question":"value && typeof value == \"DataType\" is used for _________.","answer":"Overloading"},{"question":"\" var jarvis = function (x: number, y?: number): number {} \" showcases _________.","answer":"Both the options"},{"question":"The following are correct ways of defining variables in TypeScript, except _________.","answer":"var 10231"},{"question":"TypeScript uses prototypical inheritance instead of classical inheritance.","answer":"False"},{"question":"Which keyword is used for Inheritance in TypeScript?","answer":"extends"},{"question":"Which keyword is used to access base class properties?","answer":"super"},{"question":"The code snippet \" if (value && typeof value == \"string\") {}; is used for ______________.","answer":"Overloading"},{"question":"Which of the following is/are inherited from base class?","answer":"Both the options"},{"question":"What type of checking does Java programming language use?","answer":"Static type checking"},{"question":"Compiled .js of .ts containing class will also have class.","answer":"False"},{"question":"Type System is a _____________.","answer":"Set of rules"},{"question":"Accessing a class of a module from outside is impossible in TypeScript.","answer":"False"},{"question":"Decorators provide a way for ________________.","answer":"Both the options"},{"question":"What does \" function f(l: number, w: number){} \" demonstrate?","answer":"Type annotation"},{"question":"TypeScript is an open source programming language.","answer":"True"},{"question":"any type is assigned to the variable in case of _____________________.","answer":"not initialising nor defining the type of variable"},{"question":"What is the form associated with @expression?","answer":"Decorators"},{"question":"The following types are supported by TypeScript, except ______.","answer":"integer"},{"question":"Contextual typing in TypeScript is a form of ___________.","answer":"Type Inference"},{"question":"Which of the following demonstrates function overloading, if possible, in TypeScript?","answer":"if (value && typeof value == \"number\"){}"},{"question":"Which of the following code snippets is safer?","answer":"function fn(x: () => void) { x(); }"},{"question":"Why are optional parameters added?","answer":"To assure that value is always assigned to the variable"},{"question":"\" var jarvis = function (x: number, y?: number): number {} \" showcases ____________.","answer":"Both the options"},{"question":"What is true about Mixins in TypeScript?","answer":"All the options"},{"question":"Enum organizes a _______.","answer":"Set of related values"},{"question":"During compilation, TypeScript code gets converted to assembly language.","answer":"False"},{"question":"The interface of TypeScript is usually converted to JavaScript.","answer":"False"},{"question":"The optional parameter can be defined by using \"?\".","answer":"True"},{"question":"TypeScript provides access to private members through ___________.","answer":"get and set"},{"question":"At most, how many decorators can be applied to a declaration?","answer":"Multiple"},{"question":"The following are ways to declare a variable in TypeScript, except ________.","answer":"var 2"},{"question":"How can we access a class from a module from outside?","answer":"By using namespace X "},{"question":"_________ in the command line enables experimental support for decorators.","answer":"\"experimentalDecorators\": true X \"compilerOptions\": {} X "},{"question":"How can we access a class of module from outside?","answer":"It is not possible in TypeScript due to safety concerns X By using implements X "}]}